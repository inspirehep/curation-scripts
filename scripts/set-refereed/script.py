from inspirehep.curation.search_check_do import SearchCheckDo
from inspirehep.curation.utils import set_refereed_and_fix_document_type
from inspire_dojson.utils import get_recid_from_ref
from inspire_utils.record import get_value


AFFECTED_JOURNAL_RECORDS = {
    1214577,
    1214658,
    1214562,
    1214339,
    1214397,
    1214363,
    1214774,
    1214338,
    1211677,
    1214856,
    1214594,
    1214535,
    1212465,
    1211579,
    1831498,
    1211939,
    1214248,
    1214534,
    1214599,
    1213793,
    1340773,
    1214706,
    1214406,
    1214846,
    1214444,
    1214701,
    1212397,
    1214848,
    1211841,
    1213880,
    1214608,
    1214390,
    1212993,
    1788505,
    1214386,
    1214394,
    1213914,
    1214764,
    1212437,
    1211687,
    1213232,
    1214853,
    1212932,
    1212424,
    1214416,
    1213524,
    1214692,
    1212853,
    1214729,
    1212022,
    1613954,
    1214222,
    1211879,
    1214611,
    1214062,
    1213516,
    1214530,
    1213860,
    1213909,
    1214275,
    1693113,
    1213028,
    1214355,
    1214687,
    1213925,
    1213618,
    1213138,
    1214353,
    1214382,
    1212686,
    1613997,
    1214229,
    1831236,
    1213766,
    1214854,
    2169193,
    1214389,
    1214524,
    1212828,
    1213853,
    1213505,
    1214731,
    1214425,
    1212319,
    1212223,
    1213370,
    1832964,
    1214449,
    1211926,
    1213351,
    1212714,
    1214519,
    1831883,
    1214387,
    2097389,
    1214463,
    1212837,
    1214429,
    1211679,
    1213775,
    1214697,
    1211814,
    1214166,
    1213607,
    1213662,
    1214085,
    1616534,
    2036629,
    1837011,
    1212924,
    1214626,
    1211617,
    1211901,
    1214374,
    1721862,
    1214736,
    2010043,
    1213055,
    1213452,
    1214829,
    1512965,
    1214670,
    1325193,
    1213834,
    1214038,
    1212301,
    1212911,
    1212850,
    1214019,
    1213814,
    1662990,
    1213811,
    1211683,
    1384337,
    1214260,
    1214525,
    1212812,
    1735662,
    1211904,
    1214663,
    1213768,
    1212312,
    1214564,
    1213772,
    1214723,
    1211740,
    1214767,
    1212674,
    1820531,
    1214088,
    1214835,
    1214380,
    1212708,
    1212499,
    1212467,
    1214785,
    1213659,
    1214724,
    1831888,
    1214568,
    1214794,
    1831848,
    1214336,
    1214396,
    1214532,
    1212742,
    1214533,
    1214605,
    1212332,
    1211852,
    1213207,
    1214704,
    1212067,
    1214140,
    1692014,
    1212318,
    1213027,
    1213778,
    1214677,
    1749978,
    1831886,
    1211928,
    1212464,
    1212337,
    1212658,
    1214789,
    1620406,
    1213737,
    1214538,
    1213006,
    1214206,
    1861062,
    1214514,
    1214537,
    1214679,
    1613979,
    1834798,
    1212899,
    1213503,
    1213520,
    1214744,
    1212236,
    1213906,
    1214617,
    1214711,
    1212381,
    1212573,
    1212435,
    1214259,
    1214321,
    1214770,
    1214816,
    1212695,
    1212902,
    1213212,
    1213456,
    2170070,
    1212272,
    1212602,
    1212669,
    1213654,
    1214249,
    1613961,
    1212546,
    1214512,
    1211785,
    1212344,
    1213902,
    1214210,
    1214421,
    1214574,
    1834797,
    1389229,
    1213755,
    1214809,
    1214864,
    1212908,
    1214369,
    1214656,
    1738617,
    2036631,
    1212401,
    1214204,
    1214263,
    1212886,
    1214304,
    1214881,
    1613962,
    1613980,
    1213092,
    1212868,
    1213640,
    1831887,
    1211781,
    1213323,
    1214800,
    1211633,
    1212507,
    1214063,
    1211854,
    1212589,
    1212841,
    1214409,
    1214427,
    1848511,
    1214782,
    1212191,
    1214531,
    1473010,
    1624117,
    1212194,
    1213227,
    1214003,
    1662991,
    1212744,
    1212915,
    1214225,
    1214381,
    1214553,
    1381587,
    1212941,
    1213091,
    1214435,
    1214559,
    1214722,
    1214784,
    1214823,
    1341225,
    1613943,
    1621545,
    1211794,
    1212720,
    1214468,
    1214699,
    1214751,
    1452947,
    1211655,
    1211724,
    1213610,
    1213747,
    1213777,
    1665636,
    1211710,
    1212703,
    1212789,
    1213322,
    1214160,
    1613978,
    1211808,
    1211834,
    1212692,
    1212725,
    1212778,
    1213926,
    1214351,
    1214485,
    1214596,
    1214874,
    1333336,
    1212478,
    1212510,
    1214081,
    1214209,
    1214358,
    1214592,
    1214876,
    1245675,
    2056533,
    1211728,
    1213100,
    1213249,
    1214169,
    1610403,
    1738919,
    1211735,
    1211875,
    1212330,
    1212918,
    1214132,
    1214542,
    1214552,
    1214702,
    1736443,
    2070193,
    1212814,
    1213338,
    1213940,
    1214569,
    1211639,
    1212845,
    1212893,
    1213291,
    1213470,
    1214756,
    1305561,
    1482183,
    1621540,
    1211839,
    1213588,
    1213968,
    1214637,
    1214645,
    1636881,
    1729026,
    1211572,
    1212167,
    1212307,
    1212400,
    1213054,
    1213310,
    1214245,
    1214376,
    1214430,
    1214606,
    1214640,
    1211643,
    1213458,
    1213901,
    1214110,
    1214144,
    1214182,
    1214310,
    1214585,
    1214633,
    1214824,
    1622680,
    2155427,
    1212014,
    1212522,
    1212563,
    1212746,
    1212752,
    1213279,
    1213375,
    1213521,
    1212605,
    1212790,
    1212857,
    1213402,
    1213852,
    1214607,
    1621535,
    1831985,
    1211600,
    1212362,
    1212863,
    1213025,
    1213174,
    1213235,
    1213275,
    1214109,
    1214177,
    1214220,
    1214411,
    1214493,
    1214798,
    1621537,
    1698825,
    1701689,
    2016165,
    1211911,
    1212519,
    1212785,
    1212793,
    1213738,
    1213915,
    1214541,
    1214649,
    1214661,
    1621052,
    1735923,
    1211671,
    1212293,
    1212393,
    1212461,
    1212528,
    1836989,
    1212923,
    1212974,
    1214023,
    1214520,
    1212212,
    1212604,
    1212969,
    1834796,
    1213475,
    1213549,
    1213552,
    1214631,
    1214683,
    2010048,
    1212866,
    1214262,
    1341244,
    1212490,
    1214448,
    1478867,
    1826529,
    2064556,
    1211668,
    1211703,
    1214247,
    1213535,
    1214133,
    1213302,
    1211635,
    1213107,
    1212659,
    1212883,
    1613942,
    1212947,
    1213086,
    1214440,
    1214625,
    1211598,
    1213250,
    1212141,
    1341227,
    1214077,
    1214672,
    1214857,
    1729006,
    1418292,
    1212356,
    1213936,
    1212491,
    1243781,
    1214860,
    1622642,
    1643448,
    1341246,
    1214180,
    1214453,
    1385703,
    1717429,
    1214084,
    1341239,
    1613993,
    1717427,
    1212940,
    1213160,
    1386772,
    1213687,
    1722610,
    1211919,
    1613992,
    1213301,
    1213551,
    1653878,
    1589962,
    1211801,
    1682163,
    1212326,
    1211725,
    1212480,
    1421580,
    1214093,
    1212230,
    1211690,
    1212912,
    1213997,
    1212576,
    1311535,
    1617967,
    2637072,
    1214779,
    1613996,
    1214345,
    1214719,
    1613991,
    1213879,
    1214738,
    1214707,
    1214850,
    1613955,
    1214361,
    1214513,
    1214474,
    1613941,
    1213547,
    1214414,
    1214456,
    1214746,
    1212386,
    1214796,
    1214806,
    1212411,
    1214648,
    1214747,
    1212907,
    1213518,
    1214484,
    1214842,
    1213892,
    1214862,
    1214771,
    1212881,
    1213318,
    1613956,
    1214737,
    1214754,
    1214146,
    1214293,
    1212423,
    1214732,
    1214858,
    1212966,
    1214555,
    1211605,
    1212474,
    1214745,
    1212237,
    1214660,
    1214415,
    1214735,
    1214817,
    1214354,
    1213635,
    1214720,
    1623522,
    1211797,
    1214712,
    1214788,
    1213493,
    1615419,
    1214885,
    1213818,
    1212320,
    1214861,
    1214119,
    1213620,
    1213324,
    1214479,
    1211986,
    1615421,
    1214384,
    1214391,
    1213878,
    1213140,
    1211848,
    1613959,
    1212635,
    1668220,
    1214849,
    1213074,
    1214558,
    1213713,
    1212560,
    1212463,
    1214825,
    1615550,
    1212846,
    1613990,
    1214028,
    1214402,
    1212288,
    1213438,
    1214418,
    1211793,
    1713659,
    1214550,
    1423496,
    1212957,
    1213601,
    1212562,
    1212367,
    1212834,
    1613957,
    1214311,
    1212422,
    1212786,
    1212405,
    1212729,
    1212771,
    1212818,
    1214852,
    1613960,
    1212434,
    1213624,
    1213482,
    1212050,
    1212310,
    1214515,
    1512641,
    1613958,
    1212891,
    1212847,
    1213014,
    1213134,
    1213807,
    1212994,
    1214308,
    1613940,
    1214855,
    1214446,
    1212820,
    1214781,
    1214509,
    1415879,
    1365972,
    1214476,
    1214078,
    1213958,
    1214882,
    1212747,
    1211607,
    1214837,
    1212921,
    1214797,
    1214727,
    1214883,
    1869676,
    1214684,
    1212967,
    1214778,
    1212547,
    1214350,
    1214694,
    1212617,
    1214481,
    1214543,
    1470811,
    1212904,
    1213870,
    1213876,
    1214223,
    1213532,
    1214659,
    1213156,
    1214016,
    1214046,
    1214619,
    1213614,
    1212160,
    1213771,
    2619568,
    1758418,
    1214236,
    1214685,
    1834753,
    1428597,
    1213780,
    1213907,
    1214111,
    1746517,
    1395695,
    1407072,
    1415878,
    1600729,
    1258560,
    1397066,
    1510923,
    1716747,
    1716746,
    1213378,
    1214424,
    1213945,
    1214758,
    1214349,
    1212383,
    1214168,
    1212854,
    1211902,
    1212151,
    1211912,
}


class SetRefereed(SearchCheckDo):
    """Set `refereed` and update `document_type` for selected records"""

    query = {
        "query": {
            "nested": {
                "path": "publication_info",
                "query": {
                    "terms": {
                        "publication_info.journal_record.$ref": list(
                            AFFECTED_JOURNAL_RECORDS
                        )
                    }
                },
            }
        }
    }

    def search(self):
        self.logger.info("Searching records", query=self.query)
        query = (
            self.search_class()
            .from_dict(self.query)
            .params(_source={}, size=self.size, scroll="60m")
        )
        if shard_filter := self._current_shard_filter():
            query = query.filter("script", script=shard_filter)
        return query.scan()

    @staticmethod
    def check(record, logger, state):
        refs = get_value(record, "publication_info.journal_record", [])
        journal_recids_record = {int(get_recid_from_ref(ref)) for ref in refs}
        return AFFECTED_JOURNAL_RECORDS.intersection(journal_recids_record)

    @staticmethod
    def do(record, logger, state):
        set_refereed_and_fix_document_type(record)


SetRefereed()
